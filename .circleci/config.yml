version: 2.1

commands:
  install_openjdk_11:
    description: "Install OpenJdk 11"
    steps:
      - run: wget https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz.sha256 -O ~/openjdk-11.tar.gz.sha256
      - restore_cache:
          keys:
            - openjdk-11-{{ checksum "~/openjdk-11.tar.gz.sha256" }}
      - run: touch ~/openjdk-11.tar.gz
      - run: wget -c https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz -O ~/openjdk-11.tar.gz
      - save_cache:
          key: openjdk-11-{{ checksum "~/openjdk-11.tar.gz.sha256" }}
          paths:
            - ~/openjdk-11.tar.gz
          when: always
      - run: tar xvf ~/openjdk-11.tar.gz -C ~/
      - run: sudo mv ~/jdk-11.0.2 /usr/local/openjdk-11

  setup_std_toolchain:
    description: "Setup ToolChain for multiple OpenJdk versions"
    steps:
      - run: mkdir ~/.m2
      - run: |
          cat > ~/.m2/toolchains.xml \<< EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <toolchains xmlns="http://maven.apache.org/TOOLCHAINS/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/TOOLCHAINS/1.1.0 http://maven.apache.org/xsd/toolchains-1.1.0.xsd">
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>1.8</version>
                <vendor>openjdk</vendor>
                <id>openjdk-1.8</id>
              </provides>
              <configuration>
                <jdkHome>${JAVA_HOME}</jdkHome>
              </configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
                <vendor>openjdk</vendor>
                <id>openjdk-11</id>
              </provides>
              <configuration>
                <jdkHome>/usr/local/openjdk-11</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF

  setup_openjdk_11_toolchain:
    description: "Setup ToolChain for OpenJdk 11"
    steps:
      - run: mkdir ~/.m2
      - run: |
          cat > ~/.m2/toolchains.xml \<< EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <toolchains xmlns="http://maven.apache.org/TOOLCHAINS/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/TOOLCHAINS/1.1.0 http://maven.apache.org/xsd/toolchains-1.1.0.xsd">
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>1.8</version>
                <vendor>openjdk</vendor>
                <id>openjdk-1.8</id>
              </provides>
              <configuration>
                <jdkHome>${JAVA_HOME}</jdkHome>
              </configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
                <vendor>openjdk</vendor>
                <id>openjdk-11</id>
              </provides>
              <configuration>
                <jdkHome>/usr/local/jdk-11.0.16</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF

  setup_openjdk_17_toolchain:
    description: "Setup ToolChain for OpenJdk 17"
    steps:
      - run: mkdir ~/.m2
      - run: |
          cat > ~/.m2/toolchains.xml \<< EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <toolchains xmlns="http://maven.apache.org/TOOLCHAINS/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/TOOLCHAINS/1.1.0 http://maven.apache.org/xsd/toolchains-1.1.0.xsd">
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>1.8</version>
                <vendor>openjdk</vendor>
                <id>openjdk-1.8</id>
              </provides>
              <configuration>
                <jdkHome>${JAVA_HOME}</jdkHome>
              </configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
                <vendor>openjdk</vendor>
                <id>openjdk-11</id>
              </provides>
              <configuration>
                <jdkHome>/usr/local/jdk-17.0.4</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF

  std_mvnw_jdk8:
    description: "Standard JDK8 mvnw steps"
    steps:
      - checkout
      - run:
          name: "Maven Jdk8 Clean Install"
          command: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd clean install
      - run:
          name: "Maven Jdk8 Build Jdk11 Tests"
          command: export JAVA_HOME=/usr/local/openjdk-11 && export PATH=${JAVA_HOME}/bin:{$PATH} && ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd test
      - run:
          name: "Tidy Cache before save"
          command: rm -rf ~/.m2/repository/com/github/nhojpatrick
          when: always
      - save_cache:
          key: m2-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2/repository
            - ~/.m2/wrapper
          when: always

  std_mvnw_jdk11:
    description: "Standard JDK11 mvnw steps"
    steps:
      - checkout
      - run:
          name: "Maven Jdk11 Clean Install SkipTests"
          command: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd clean install -DskipTests
      - run:
          name: "Maven Jdk11 Tests"
          command: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd test
      - run:
          name: "Tidy Cache before save"
          command: rm -rf ~/.m2/repository/com/github/nhojpatrick
          when: always
      - save_cache:
          key: m2-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2/repository
            - ~/.m2/wrapper
          when: always

  std_mvnw_jdk17:
    description: "Standard Jdk17 mvnw steps"
    steps:
      - checkout
      - run:
          name: "Maven Jdk17 Clean Install SkipTests"
          command: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd clean install -DskipTests
      - run:
          name: "Maven Jdk17 Tests"
          command: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd test
      - run:
          name: "Tidy Cache before save"
          command: rm -rf ~/.m2/repository/com/github/nhojpatrick
          when: always
      - save_cache:
          key: m2-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2/repository
            - ~/.m2/wrapper
          when: always

  qa_checkstyle:
    description: "Standard mvnw checkstyle"
    steps:
      - checkout
      - run: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd,qa_checkstyle -DskipTests verify
      - run:
          name: "Tidy Cache before save"
          command: rm -rf ~/.m2/repository/com/github/nhojpatrick
          when: always
      - save_cache:
          key: m2-dependencies-{{ checksum "pom.xml" }}-checkstyle
          paths:
            - ~/.m2/repository
            - ~/.m2/wrapper
          when: always

  qa_javadoc:
    description: "Standard mvnw javadoc"
    steps:
      - checkout
      - run: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd,qa_javadoc -DskipTests verify
      - run:
          name: "Tidy Cache before save"
          command: rm -rf ~/.m2/repository/com/github/nhojpatrick
          when: always

  qa_pmd:
    description: "Standard mvnw pmd"
    steps:
      - checkout
      - run: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd,qa_pmd -DskipTests verify
      - run:
          name: "Tidy Cache before save"
          command: rm -rf ~/.m2/repository/com/github/nhojpatrick
          when: always

  qa_spotbugs:
    description: "Standard mvnw spotbugs"
    steps:
      - checkout
      - run: ./mvnw --batch-mode --fail-at-end --no-transfer-progress --update-snapshots -Pcicd,qa_spotbugs -DskipTests verify
      - run:
          name: "Tidy Cache before save"
          command: rm -rf ~/.m2/repository/com/github/nhojpatrick
          when: always

jobs:
  passed_builds:
    docker:
      - image: alpine:latest
    resource_class: small
    steps:
      - run: echo "Build Passed"

  passed_qa:
    docker:
      - image: alpine:latest
    resource_class: small
    steps:
      - run: echo "QA Passed"

  jdk8:
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - install_openjdk_11
      - setup_std_toolchain
      - std_mvnw_jdk8

  jdk11:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - setup_openjdk_11_toolchain
      - std_mvnw_jdk11

  jdk17:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - setup_openjdk_17_toolchain
      - std_mvnw_jdk17

  checkstyle:
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - install_openjdk_11
      - setup_std_toolchain
      - qa_checkstyle

  javadoc:
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - install_openjdk_11
      - setup_std_toolchain
      - qa_javadoc

  pmd:
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - install_openjdk_11
      - setup_std_toolchain
      - qa_pmd

  spotbugs:
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - install_openjdk_11
      - setup_std_toolchain
      - qa_spotbugs

workflows:
  version: 2
  build_all:
    jobs:
      - jdk8
      - jdk11:
          filters:
            branches:
              ignore:
                - develop
                - main
      - jdk17:
          filters:
            branches:
              ignore:
                - develop
                - main

      - passed_builds:
          requires:
            - jdk8
            - jdk11
            - jdk17
      - passed_qa:
          requires:
            - checkstyle
            - javadoc
            - pmd
            - spotbugs
      - checkstyle:
          requires:
            - passed_builds
          filters:
            branches:
              ignore:
                - develop
                - main
      - javadoc:
          requires:
            - passed_builds
          filters:
            branches:
              ignore:
                - develop
                - main
      - pmd:
          requires:
            - passed_builds
          filters:
            branches:
              ignore:
                - develop
                - main
      - spotbugs:
          requires:
            - passed_builds
          filters:
            branches:
              ignore:
                - develop
                - main
